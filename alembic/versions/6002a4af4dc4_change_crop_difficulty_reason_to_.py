"""Change crop.difficulty_reason to difficulty_reasons JSONB array

Revision ID: 6002a4af4dc4
Revises: e88fa4277682
Create Date: 2025-07-19 01:58:14.612502

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '6002a4af4dc4'
down_revision: Union[str, None] = 'e88fa4277682'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Add new JSONB column for difficulty_reasons
    op.add_column('crop', sa.Column('difficulty_reasons', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    
    # Migrate data from difficulty_reason to difficulty_reasons
    op.execute("""
        UPDATE crop 
        SET difficulty_reasons = 
            CASE 
                WHEN difficulty_reason IS NOT NULL AND difficulty_reason != '' 
                THEN jsonb_build_array(difficulty_reason)
                ELSE '[]'::jsonb
            END
    """)
    
    # Set default empty array for NULL values
    op.execute("UPDATE crop SET difficulty_reasons = '[]'::jsonb WHERE difficulty_reasons IS NULL")
    
    # Drop the old column
    op.drop_column('crop', 'difficulty_reason')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Add back the old difficulty_reason column
    op.add_column('crop', sa.Column('difficulty_reason', sa.VARCHAR(), autoincrement=False, nullable=True))
    
    # Migrate data from difficulty_reasons back to difficulty_reason
    op.execute("""
        UPDATE crop 
        SET difficulty_reason = 
            CASE 
                WHEN difficulty_reasons IS NOT NULL AND jsonb_array_length(difficulty_reasons) > 0
                THEN difficulty_reasons->>0
                ELSE NULL
            END
    """)
    
    # Drop the new column
    op.drop_column('crop', 'difficulty_reasons')
    # ### end Alembic commands ###
