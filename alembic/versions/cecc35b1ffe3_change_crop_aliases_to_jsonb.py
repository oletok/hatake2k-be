"""change crop aliases to jsonb

Revision ID: cecc35b1ffe3
Revises: 3be52d1a968c
Create Date: 2025-07-18 05:32:00.189587

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'cecc35b1ffe3'
down_revision: Union[str, None] = '3be52d1a968c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # First, convert existing string data to JSONB format
    # Convert pipe-separated strings to JSON arrays
    op.execute("""
        UPDATE crop 
        SET aliases = CASE 
            WHEN aliases IS NULL OR aliases = '' THEN '[]'::jsonb
            ELSE ('["' || REPLACE(aliases, '|', '","') || '"]')::jsonb
        END
    """)
    
    # Then alter the column type with USING clause
    op.execute("ALTER TABLE crop ALTER COLUMN aliases TYPE JSONB USING aliases::jsonb")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # First, convert JSONB data back to pipe-separated strings
    op.execute("""
        UPDATE crop 
        SET aliases = CASE 
            WHEN aliases IS NULL OR aliases = '[]'::jsonb THEN ''
            ELSE REPLACE(REPLACE(aliases::text, '["', ''), '"]', '')
        END
    """)
    
    # Then alter the column type back
    op.alter_column('crop', 'aliases',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.VARCHAR(),
               nullable=False)
    # ### end Alembic commands ###
